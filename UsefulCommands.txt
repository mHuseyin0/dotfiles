// Compile cpp code (./Executable.out to run)
g++ Program.cpp -Wall -O2 -o Executable.out

// Starts gnome. If you disabled this service, gnome will not autostart
systemctl start gdm

// Kill a session with name or number
tmux kill-session -t 0

// Creates new session named main, if exists attaches to it
tmux new-session -A -s main

// Opens ventoy plugin server (ventoy directory can be installed from its website)
cd ventoy-1.0.80/ && sudo bash VentoyPlugson.sh /dev/sdb2

// Get the fastest and up to date repos
sudo reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist

// Set volume level
pactl set-sink-volume @DEFAULT_SINK@ 150%

// Copy text from tmux buffer to the system buffer
tmux show-buffer | xclip -selection clipboard

// Convert pdf to txt
pdftotext -layout <filename>

// List pacman packages by size
expac "%n %m" -l'\n' -Q $(pacman -Qq) | sort -rhk 2 | less

// (Un)comment multiple lines in lunar vim after selecting
// Comment:
'<,'>s/^/#/g
// Uncomment:
'<,'>s/^#//g

// Find and replace in vim
:%s/pattern/replace/g

// Do not generate nohup.out
nohup firefox >/dev/null 2>&1 &

// Use aliases and previous nohup wrapper in scripts
shopt -s expand_aliases
source /home/huseyin/.bash_aliases

// Find the package which owns the command
// (Useful when a command and its psckage name are not the same)
pacman -Qo <command name>

#If not running interactively, don't do anything and return early
[[ $- == *i* ]] || return

// MariaDB create user
CREATE USER "username"@"localhost" IDENTIFIED BY 'password';

// MariaDB grant all privileges
GRANT ALL PRIVILEGES ON *.* TO 'username'@localhost IDENTIFIED BY 'password';

// Grant privileges on a db
GRANT ALL PRIVILEGES ON 'yourDB'.* TO 'username'@localhost;

// Flush
FLUSH PRIVILEGES;

// Dump
mariadb-dump --user=admin_backup --password --lock-tables --extended-insert --databases your_database_name > /data/backup/your_database_name.sql

// PostgreSQL

// Create user
sudo su - postgres
// then
createuser --interactive
// then from psql
ALTER USER <username> WITH PASSWORD '<password>';

// In psql console
\COPY <table> TO '/tmp/<out>.csv' CSV HEADER

// In terminal
pg_dump -U <username (postgres is valid)> -h localhost <database> >> <filename>.sql

// ppt(x) to pdf
libreoffice --headless --convert-to pdf *.ppt *.pptx --outdir ./pdfs

// Generate ssh key
ssh-keygen -t ed25519 -C "your_email@example.com"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
// Then add /home/huseyin/.ssh/id_ed25519.pub to github ssh keys for example

// Set upstream as ssh
git remote set-url origin git@github.com:username/repo.git
